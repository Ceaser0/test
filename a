var canvas=document.getElementById('myCanvas');
var ctx=canvas.getContext('2d');


var game=function(){
    var width=canvas.width;
    var height=canvas.height;
    var right=false,left=false;//左右键是否被按下
    var flag=true; //是否在运行
    var Stage=function(f){ 

        var ballPos=this.initialPos();
        //构造一个球的示例，半径为8
        this.ball = new Ball(ballPos.x,ballPos.y,8); 
        //宽100，厚10的挡板
        this.paddle=new Paddle(100,10);
        //砖块8*8
        this.bricks=new Bricks(8,8);
    }


    var Ball=function(x,y,r){
        this.r=r;
        this.x=x;
        this.y=y;
		//11111
        this.dx=5;this.dy=4;    //下一帧圆心移动的像素    
    }

    var Paddle=function(w,h){

        this.width=w;
        this.height=h;
        this.posX=(width-this.width)/2;//挡板最左边的坐标，可以确定挡板的位置
        this.dx=15//10;//挡板横向移动的速度
    }

 
    var Bricks=function(row,col){
        this.row=row;
        this.col=col;
        this.num=0;
        this.padding=1;//砖块之间的空隙
        this.width=(width/col)-this.padding;
        this.height=30;
        this.exists=new Array(this.row);//行数
        for(var i=0;i<this.col;i++){
            this.exists[i]=new Array(this.col);//每行块数
			var randomNum = Math.random();
            for(var j=0;j<this.col;j++){
				var randomNum = Math.random();//随即填充砖块
				if (randomNum >= 0.3) {
					this.exists[i][j]=1;
					this.num++;
						    } 
				
              }
        }
    }

    //舞台初始化
    Stage.prototype.run=function(){
        this.eventListeners();//绑定监听器
        var s=this;//直接在setInterval内用this返回的是window，所以要先存一下
		//设定时刷新画面
        this.interval=setInterval(function(){
            s.nextFrame();
        },25)
    }
    //刷新操作
    Stage.prototype.nextFrame=function(){
        ctx.clearRect(0,0,width,height)

        this.bricks.draw();
        this.paddle.draw();
        this.ball.draw();

        this.collisionDetect();
        this.detectHitBricks();

        this.ball.move();
        this.paddle.move();

        this.speedUp();
        
    }
    //舞台绑定监听器
    Stage.prototype.eventListeners=function(){
        document.addEventListener('keydown',function(e){
            var keyNum=window.event?e.keyCode:e.which;
            switch(keyNum){
                case 39:right=true;break;//右方向键
                case 37:left=true;break;//左方向键
                case 32:flag=!flag;//空格键控制暂停
            }
        },false)
        document.addEventListener('keyup',function(e){
            var keyNum=window.event?e.keyCode:e.which;
            switch(keyNum){
                case 39:right=false;break;//右方向键
                case 37:left=false;break;//左方向键
            }
        },false)
    }
    //边缘碰撞检测
    Stage.prototype.collisionDetect=function(){
        if(this.ball.x+this.ball.r > width||    
            this.ball.x-this.ball.r  <0) //撞击两侧的墙
            this.ball.dx=-this.ball.dx
        if(this.ball.y-this.ball.r <0)    //撞击上墙
            this.ball.dy=-this.ball.dy 
        if(this.ball.y+this.ball.r > height-this.paddle.height*0.5){         //触底
            this.paddle.posX <=this.ball.x &&
            this.paddle.posX+this.paddle.width >=this.ball.x
            ? this.ball.dy=-this.ball.dy : this.stop("游戏结束！你输了");
        }         
    }
	//游戏结束
    Stage.prototype.stop=function(str){
        ctx.font="30px Verdana";     
		// 渐变色
		var textWidth = ctx.measureText(str).width;
        var gradient=ctx.createLinearGradient(0,0,width,0);
		gradient.addColorStop(0, '#C70039');
		gradient.addColorStop(0.5, '#FF5733');
		gradient.addColorStop(1, '#FFC300');
   
        ctx.fillStyle=gradient; 
        ctx.fillText(str,width*0.5-textWidth*0.5,height*0.5 );
        clearInterval(this.interval);
    }
    //砖块碰撞检测
    Stage.prototype.detectHitBricks=function(){
        var scaleX=this.bricks.width+this.bricks.padding;	//一格方块的宽高方位
        var scaleY=this.bricks.height+this.bricks.padding;
        var col = Math.floor(this.ball.x/scaleX);	//小球在哪个区块的位置
        var row = Math.floor(this.ball.y/scaleY);
        if(this.bricks.exists[row]!==undefined && 	//该区块是否有方块
            this.bricks.exists[row][col]!==undefined &&
             this.bricks.exists[row][col] == 1){
            this.ball.dy=-this.ball.dy;
            this.bricks.exists[row][col]=0;
            this.bricks.num--;
            if(this.bricks.num==0){
                this.stop(" 游戏结束，你赢了!")
            }
        }

    }
    //砖块数越少，ball的dx、dy要增加
    Stage.prototype.speedUp=function(){
        var speedIncreasement=(this.bricks.row-Math.ceil(this.bricks.num/this.bricks.col))*0.001;
        this.ball.dx>0?(this.ball.dx += speedIncreasement):(this.ball.dx -= speedIncreasement);
        this.ball.dy>0?(this.ball.dy += speedIncreasement):(this.ball.dy -= speedIncreasement);
    }
    //生成[small,big]之间的数字
    Stage.prototype.generateRandom=function(small,big){
        if(small>big) return ;
        return small+(big-small)*Math.random();
    }
    //生成球的初始坐标11111挡板上方
    Stage.prototype.initialPos=function(){
        var pos={};
        pos.y=this.generateRandom(250,550);
        pos.x=this.generateRandom(100,500);
        return pos;
    }
    Ball.prototype.draw=function(){
        ctx.beginPath()
        ctx.fillStyle='#36648B';
        ctx.arc(this.x,this.y,this.r ,0,Math.PI*2)
        ctx.closePath()
        ctx.fill()
    }
    Ball.prototype.move=function(){
        if(!flag){
            this.x =this.x+this.dx;
            this.y =this.y+this.dy;
        }
    }
    Paddle.prototype.draw=function(){
        ctx.beginPath();
        ctx.fillStyle='#55007f';
        ctx.rect(this.posX,height-this.height,this.width,this.height);
        ctx.fill();
        ctx.closePath();
    }
	//左右移动挡板
    Paddle.prototype.move=function(){
        if(right && !flag &&this.posX+this.width<=width)
            this.posX=this.posX+this.dx;
        else if(left && !flag && this.posX>=0){
            this.posX=this.posX-this.dx;
        }
    }
    Bricks.prototype.draw=function(){
        for(var i=0;i<this.row;i++)
            for(var j=0;j<this.col;j++)
                if(this.exists[i][j]==1){//砖块存在则绘制
                    ctx.beginPath();
                    ctx.fillStyle='#8B8B83';
                    ctx.rect(j*(this.width+this.padding)+this.padding,
                        i*(this.height+this.padding)+this.padding,
                        this.width,this.height);
                    ctx.fill();
                    ctx.closePath();
                }
    }
    return Stage;
}

function Init(){
	var startBtn = document.getElementById("start-btn");
	startBtn.addEventListener("click", function() {
		console.log("按钮被点击了");
	    startBtn.style.display = "none";
	var g=new game();//返回值对象是stage
	g.run();//游戏运行
}

window.addEventListener("load",Init,false);
<!DOCTYPE HTML>
<html>

<head>
	<title>20990014陈熙民</title>
	<meta http-equiv=Content-Type content="text/html;charset=utf-8">
	<style> 
		canvas{border: 2px solid #000}
	</style>

</head>

<body>
	<button id="start-btn" style="position:absolute; left:45%; top:45%; transform:translate(-50%,-50%); background-color:#4CAF50; color:white; font-size:24px;">开始游戏</button>
	
	<canvas id="myCanvas" width="500" height="700">您的浏览器不支持canvas,请更换浏览器！</canvas>
	<script src="game.js"></script>
</body>

</html>





